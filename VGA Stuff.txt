

// uint16_t pickedMode = 0xffff;
// uint32_t* fb = NULL;
// const int desiderWidth = 800;
// const int desiderHeight = 600;
// const int desiderBPP = 32;

// VbeInfoBlock* info = (VbeInfoBlock*)MEMORY_VESA_INFO;
// VbeModeInfo* modeinfo = (VbeModeInfo*)MEMORY_MODE_INFO;
// // Init graphics
// if(VBE_GetControllerInfo(info)){
//   uint16_t* mode = (uint16_t*) info->VideoModePtr;

//   for(int i = 0;mode[i] != 0xFFFF; i++){
//     if(!VBE_GetModeInfo(mode[i],modeinfo)){
//       printf("Can't get mode info %x\r\n",mode[i]);
//       continue;
//     }
//     //printf("mode res: (%dx%d),",modeinfo->width, modeinfo->height);

//     bool hasFB = (modeinfo->attributes & 0x90) == 0x90;

//     if( hasFB &&
//         modeinfo->width == desiderWidth &&
//         modeinfo->height == desiderHeight &&
//         modeinfo->bpp == desiderBPP ){

//         pickedMode = mode[i];
//         break;

//     }
//   }
//   if(pickedMode != 0xFFFF) { // && VBE_SetMode(pickedMode) ! NOTE: TO ENABLE VBE ADD THIS TO THE IF CONDITION! (FOR NOW IT'S DISABLED)
//     fb = (uint32_t*)(modeinfo->framebuffer);
//   }
// }else{
//   printf("No VBE extensions.\r\n");
// }

; int __attribute__((cdecl)) x86_Video_GetVbeInfo(void* infoOut);
global x86_Video_GetVbeInfo
x86_Video_GetVbeInfo:

    ; make new call frame
    push ebp             ; save old call frame
    mov ebp, esp          ; initialize new call frame

    push edi
    push es
    push ebp

    x86_EnterRealMode

    mov eax, 0x4f00
    LinearToSegOffset [bp + 8], es, edi, di
    int 10h

    cmp al, 4fh
    jne .error


    pop ebp
    pop es
    pop edi

    push eax

    x86_EnterProtectedMode

    pop eax

    ; restore old call frame
    mov esp, ebp
    pop ebp
    ret

.error:
  mov al, -1


;int __attribute__((cdecl)) x86_Video_GetModeInfo(uint16_t mode, void* infoOut);
global x86_Video_GetModeInfo
x86_Video_GetModeInfo:

    ; make new call frame
    push ebp             ; save old call frame
    mov ebp, esp          ; initialize new call frame

    push edi
    push es
    push ebp
    push ecx

    x86_EnterRealMode

    mov eax, 0x4f01
    mov cx, [bp + 8]
    LinearToSegOffset [bp + 12], es, edi, di
    int 10h

    cmp al, 4fh
    jne .error

    pop ecx
    pop ebp
    pop es
    pop edi


    push eax

    x86_EnterProtectedMode

    pop eax

    ; restore old call frame
    mov esp, ebp
    pop ebp
    ret

.error:
  mov al, -1


;int __attribute__((cdecl)) x86_Video_GetModeInfo(uint16_t mode, void* infoOut);
global x86_Video_SetMode
x86_Video_SetMode:

    ; make new call frame
    push ebp             ; save old call frame
    mov ebp, esp          ; initialize new call frame

    push edi
    push es
    push ebp
    push ebx

    x86_EnterRealMode

    mov ax, 0
    mov es, ax
    mov edi,0

    mov eax, 0x4f02
    mov bx, [bp + 8]
    int 10h

    cmp al, 4fh
    jne .error

    pop ebx
    pop ebp
    pop es
    pop edi

    push eax

    x86_EnterProtectedMode

    pop eax

    ; restore old call frame
    mov esp, ebp
    pop ebp
    ret

.error:
  mov al, -1
